cmake_minimum_required(VERSION 3.10)
project(saclib VERSION 2.2.8)
set(CMAKE_POSITION_INDEPENDENT_CODE ON)
include(GNUInstallDirs)

if(CMAKE_SYSTEM_PROCESSOR MATCHES "amd64.*|x86_64.*|AMD64.*")
	if("${CMAKE_SIZEOF_VOID_P}" EQUAL "8")
		set(X86_64 1)
	else()
		set(X86 1)
	endif()
elseif(CMAKE_SYSTEM_PROCESSOR MATCHES "i686.*|i386.*|x86.*|amd64.*|AMD64.*")
	set(X86 1)
elseif(CMAKE_SYSTEM_PROCESSOR MATCHES "sparc.*|SPARC.*|Sparc.*")
	set(sparc32 1)
else()
	MESSAGE(FATAL_ERROR "Processor architecture not supported")
endif()

if (${CMAKE_SYSTEM_NAME} STREQUAL "Linux")
	set(LINUX 1)
elseif (${CMAKE_SYSTEM_NAME} STREQUAL "Darwin")
	set(MACOS 1)
elseif(CMAKE_HOST_SOLARIS)
	set(SOLARIS 1)
else()
	MESSAGE(FATAL_ERROR "Operating system not supported")
endif()

add_subdirectory(src)

if(LINUX AND X86)
	add_subdirectory(sysdep/linuxX86)
elseif(LINUX AND X86_64)
	add_subdirectory(sysdep/linuxX86_64)
elseif(MACOS AND X86)
	add_subdirectory(sysdep/macosX86)
elseif(MACOS AND X86_64)
	add_subdirectory(sysdep/macosX86_64)
elseif(SOLARIS AND SPARC)
	add_subdirectory(sysdep/solarisSparc)
endif()

add_library(saclib SHARED $<TARGET_OBJECTS:saclib_objects> ${CMAKE_CURRENT_SOURCE_DIR}/src/gcword.cc)
target_include_directories(saclib PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}/include")
install(TARGETS saclib DESTINATION "${CMAKE_INSTALL_LIBDIR}")

if(SACLIB_DOC)
	find_package(LATEX COMPONENTS MAKEINDEX)
	add_subdirectory(doc)
endif()
